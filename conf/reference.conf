# The blogs configuration. Each element in this config uses ${erqx.blogs.prototype} as a prototype.
blogs {

}

erqx {
  blogs.prototype {
    # The path of the blog.  This should not end in a slash.  This path will be relative to the path that the blogs
    # router is deployed to.
    path = "/blog"

    # The order that the router should apply to the blog
    order = 10

    # The git configuration
    gitConfig {

      # The repo must be a repo on the filesystem that has been cloned from somewhere.
      gitRepo = "."

      # The path within the repo to serve the blog from.  Optional.
      path = null

      # The branch to read the blog from.
      branch = "published"

      # The name of the remote to fetch from.  If not specified, no fetch will be done when updating.
      remote = null

      # The fetch key.  Used to authenticate commit hooks from a remote git repository such as GitHub.
      # If not specified, remote triggering of fetching is disabled.
      fetchKey = null

      # The update interval.  If specified, the blog will be fetched (if a remote is configured) and reindexed at this
      # interval.  Reindexing is only done if the blog has actually changed.
      updateInterval = null

      # Authentication configuration.
      auth = null

      # The draft prefix. If set, any branches in the git repo that have this prefix will be considered drafts,
      # and the whole blog site will be served from that path at /drafts/<branch commit hash>
      draft-prefix = null
    }
  }

  # Configuration for the request cache
  cache {
    # Cache low watermark
    low-watermark = 56m

    # Cache high watermark
    high-watermark = 64m
  }

  # Configuration for HTTP2 server push.
  http2-server-push {

    # The server push method. Supported values are none and link. If none, pushed assets from the theme will be ignored,
    # if link, they'll be pushed to using the Link preload headers - this requires a reverse proxy serving HTTP/2 that
    # supports these headers. See https://w3c.github.io/preload/#server-push-http-2 for more details.
    method = link

    # The name of the cookie to use to track if we've pushed the resources to this browser before.
    cookie = preloaded
  }

  # The file loader dispatcher is used by the actor that loads files out of git.  All blocking git IO is done on these
  # threads.
  file-loader-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 10
      core-pool-size-max = 10
    }
  }

  # The blog loader dispatcher is used to do fetching and reindexing of the blog when it's updated.  There only needs to
  # be one of these threads, all tasks done on this dispatcher are background tasks.
  blog-loader-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 1
      core-pool-size-max = 1
    }
  }
}